/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package mvision;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.imageio.ImageIO;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author kaies
 */
public class CBIR2 extends javax.swing.JFrame {
    private  ArrayList outputList; 
    private ArrayList list;
    private FeatureTester tester;
    private int aaa = 350;
    private int bbb = 300;

    /**
     * Creates new form CBIR2
     */

        
    public CBIR2() {
        initComponents();
      
       
       
        
  
      
    }

    CBIR2(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        C1 = new javax.swing.JComboBox();
        c2 = new javax.swing.JComboBox();
        ok = new javax.swing.JButton();
        view = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        img1 = new javax.swing.JLabel();
        img2 = new javax.swing.JLabel();
        img3 = new javax.swing.JLabel();
        img4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        next = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        shuffle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        C1.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        C1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Color", "Form", "Texture" }));
        C1.setToolTipText("");
        C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1ActionPerformed(evt);
            }
        });

        c2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });

        ok.setBackground(new java.awt.Color(0, 204, 204));
        ok.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/66.png"))); // NOI18N
        ok.setText("OK");
        ok.setContentAreaFilled(false);
        ok.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        ok.setIconTextGap(5);
        ok.setOpaque(true);
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        view.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout viewLayout = new javax.swing.GroupLayout(view);
        view.setLayout(viewLayout);
        viewLayout.setHorizontalGroup(
            viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(viewLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(img1)
                            .addComponent(img2)
                            .addComponent(img3)
                            .addComponent(img4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(142, 142, 142))
        );
        viewLayout.setVerticalGroup(
            viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewLayout.createSequentialGroup()
                .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(viewLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(img1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(img2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(img3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(img4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));

        next.setBackground(new java.awt.Color(0, 204, 204));
        next.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/777.png"))); // NOI18N
        next.setText("next");
        next.setContentAreaFilled(false);
        next.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        next.setOpaque(true);
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        previous.setBackground(new java.awt.Color(0, 204, 204));
        previous.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        previous.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/666.png"))); // NOI18N
        previous.setText("previous");
        previous.setContentAreaFilled(false);
        previous.setOpaque(true);
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        shuffle.setBackground(new java.awt.Color(204, 204, 204));
        shuffle.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        shuffle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/555.png"))); // NOI18N
        shuffle.setText("Shuffle");
        shuffle.setContentAreaFilled(false);
        shuffle.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        shuffle.setIconTextGap(5);
        shuffle.setOpaque(true);
        shuffle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shuffleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(shuffle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addComponent(previous)
                .addGap(49, 49, 49)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shuffle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1ActionPerformed
        if(C1.getSelectedItem()== "Color")
        {
            c2.removeAllItems();
        c2.addItem("AverageRGB");
        c2.addItem("Local color Histogram");
        c2.addItem("Global color Histogram");
        }
        if(C1.getSelectedItem()== "Form")
         {c2.removeAllItems();
        c2.addItem("Correlation");
        c2.addItem("Intersection");
                }
        if(C1.getSelectedItem()== "Texture")
         {c2.removeAllItems();
        c2.addItem("Bhattacharyya");
        c2.addItem("Chi-square");
                }
    }//GEN-LAST:event_C1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
      
    }//GEN-LAST:event_c2ActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        int index = outputList.indexOf(list.get(list.size()-1));
     if(index>6){
         list=null;
     list=new ArrayList();
        for (int i = index-7; i < outputList.size(); i++) {
            if (list.size()==4) 
                break;
            list.add((String)outputList.get(i));
            
        }
        changeImages();
     }
    }//GEN-LAST:event_previousActionPerformed

    private void shuffleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shuffleActionPerformed
        String pathint = "C:\\Users\\bilel\\Desktop\\projet Sleam\\projet mvision\\image.orig\\";
         
         //File file;
         Random rand = new Random();
         
         int selecte = rand.nextInt(999 - 1) + 1;  
         int selecte2 = rand.nextInt(999 - 1) + 2; 
         int selecte3 = rand.nextInt(999 - 1) + 4; 
         int selecte4 = rand.nextInt(999 - 1) + 5; 
         String pathe1 = pathint + selecte + ".jpg";
          String pathe2 = pathint + selecte2 + ".jpg";
           String pathe3 = pathint + selecte3 + ".jpg";
            String pathe4 = pathint + selecte4 + ".jpg";
         String ext[] = { "jpg", "JPG" };
         
          
       if(pathe1.endsWith( ext[0])||pathe1.endsWith( ext[1]))
				{
				
			
			      jLabel3.setIcon(new ImageIcon(getImage(pathe1)));
                              jLabel3.setSize(aaa, bbb);
                              img1.setVisible(false);
                              img1.setText(pathe1);
                              
                              
                              
                              jLabel4.setIcon(new ImageIcon(getImage(pathe2)));
                               jLabel4.setSize(aaa, bbb);
                               img2.setVisible(false);
                              img2.setText(pathe2);
                              
                              jLabel5.setIcon(new ImageIcon(getImage(pathe3)));
                               jLabel5.setSize(aaa, bbb);
                               img3.setVisible(false);
                              img3.setText(pathe3);
                               
                              jLabel6.setIcon(new ImageIcon(getImage(pathe4)));
                               jLabel6.setSize(aaa, bbb);
                               img4.setVisible(false);
                              img4.setText(pathe4);
                               
				}
				else
				{
					JOptionPane.showMessageDialog(this, " Select Image Files only");
				}
        
    }//GEN-LAST:event_shuffleActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
 
        
        if (c2.getSelectedItem()=="AverageRGB") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d = 15, d1 = 0;
				String[] argv = { "mvision.AverageRGB",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        if (c2.getSelectedItem()=="Local color Histogram") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d = 15, d1 = 0;
				String[] argv = { "mvision.LocalColorHistogram",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        if (c2.getSelectedItem()=="Global color Histogram") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d = 15, d1 = 0;
				String[] argv = { "mvision.GlobalColorHistogram",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        if (c2.getSelectedItem()=="Correlation") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d = 1, d1 = 0.5;
				String[] argv = { "mvision.Correlation",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        if (c2.getSelectedItem()=="Chi-square") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d =3000, d1 = 0;
				String[] argv = { "mvision.ChiSquare",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        if (c2.getSelectedItem()=="Intersection") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d = 4000, d1 = 15;
				String[] argv = { "mvision.Intersection",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        if (c2.getSelectedItem()=="Bhattacharyya") {
			if ( jLabel2.getText() != null && ! jLabel2.getText().equals("")) {
				double d = 390, d1 = 0;
				String[] argv = { "mvision.Bhattacharyya",  jLabel2.getText() };
                               
				Date startTime = new Date();
				tester = new FeatureTester(argv, d, d1, view);
				outputList = tester.getOutputList();
				list  = new ArrayList();
				for (int i = 0; i < outputList.size(); i++) {
					if (i == 4)
						break;
					list.add((String) outputList.get(i));
				}
				//view.list = list;
                                changeImages();

				jLabel1.setText("Output Image");
				System.out.println("Output Image");
				System.out.println("-------------------------" + list);
				view.repaint();

				Date currentTime = new Date();
				long millisecond = currentTime.getTime() - startTime.getTime();
				String s = "Total Time used = " + String.valueOf(millisecond)
						+ " ms";
				JOptionPane.showMessageDialog(view, s);
				next.setEnabled(true);
			} else
				JOptionPane.showMessageDialog(this,
						"Please select input image file");
		}
        
        
        
        
        
        
        
    }//GEN-LAST:event_okActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
     int index = outputList.indexOf(list.get(list.size()-1));
     if(index<outputList.size()-4){
         list=null;
     list=new ArrayList();
        for (int i = index+1; i < outputList.size(); i++) {
            if (list.size()==4) 
                break;
            list.add((String)outputList.get(i));
            
        }
        changeImages();
     }	
    }//GEN-LAST:event_nextActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        jLabel1.setIcon(new ImageIcon(getImage(img1.getText())));
        jLabel2.setText(img1.getText());
        jLabel2.setVisible(false);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
         jLabel1.setIcon(new ImageIcon(getImage(img3.getText())));
         jLabel2.setText(img3.getText());
        jLabel2.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
         jLabel1.setIcon(new ImageIcon(getImage(img2.getText())));
         jLabel2.setText(img2.getText());
        jLabel2.setVisible(false);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
         jLabel1.setIcon(new ImageIcon(getImage(img4.getText())));
         jLabel2.setText(img4.getText());
        jLabel2.setVisible(false);
    }//GEN-LAST:event_jLabel6MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CBIR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CBIR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CBIR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CBIR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
           
            public void run() {
                new CBIR2().setVisible(true);
            }
        }
                
                );
        
    }
    public Image getImage(String path) {
		String extension = "";
		Image theImage = null;
		FileInputStream in = null;
		for (int i = (path.length() - 1); i >= 0; i--) {
			String ch = String.valueOf(path.charAt(i));
			if (ch.equals(".")) {
				break;
			}
			extension += ch;
		}
		if (extension.equalsIgnoreCase("PMB")) {
			try {
				in = new FileInputStream(path);
			} catch (Exception e) {
			}
			BMPLoader bmp = new BMPLoader();
			theImage = bmp.read(in);
		} else if (extension.equalsIgnoreCase("gpj")) {
			theImage = new ImageIcon(path).getImage();
		}

		else if (extension.equalsIgnoreCase("fig"))
			theImage = new ImageIcon(path).getImage();

		else
			theImage = new ImageIcon("Null.jpg").getImage();
		return theImage;
	}
    public void changeImages(){
        
        jLabel3.setIcon(new ImageIcon(getImage(list.get(0).toString())));
                              jLabel3.setSize(aaa, bbb);
                              img1.setVisible(false);
                              img1.setText(list.get(0).toString());
                              
                              
                              
                              jLabel4.setIcon(new ImageIcon(getImage(list.get(1).toString())));
                               jLabel4.setSize(aaa, bbb);
                               img2.setVisible(false);
                              img2.setText(list.get(1).toString());
                              
                              jLabel5.setIcon(new ImageIcon(getImage(list.get(2).toString())));
                               jLabel5.setSize(aaa, bbb);
                               img3.setVisible(false);
                              img3.setText(list.get(2).toString());
                               
                              jLabel6.setIcon(new ImageIcon(getImage(list.get(3).toString())));
                               jLabel6.setSize(aaa, bbb);
                               img4.setVisible(false);
                              img4.setText(list.get(3).toString());
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox C1;
    private javax.swing.JComboBox c2;
    private javax.swing.JLabel img1;
    private javax.swing.JLabel img2;
    private javax.swing.JLabel img3;
    private javax.swing.JLabel img4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton next;
    private javax.swing.JButton ok;
    private javax.swing.JButton previous;
    private javax.swing.JButton shuffle;
    private javax.swing.JPanel view;
    // End of variables declaration//GEN-END:variables
}
